pipeline
    {
    options { skipDefaultCheckout() }
    agent none

    stages
        {
        stage('conda-build-mac')
            {
            agent { label 'mac' }

            environment
                {
                CONDA_BLD_PATH = "${WORKSPACE}/conda-bld"
                ANACONDA_TOKEN = credentials('glotzer-anaconda-token')
                }

            steps
                {
                sh 'echo ${CONDA_BLD_PATH}'

                retry(5)
                    {
                    dir('code')
                        {
                        checkout scm

                        timeout(time: 2, unit: 'HOURS')
                            {
                            sh 'git submodule update --init'

                            sh '''
                               conda build conda-recipe
                               '''
                            }
                        }
                    }

                script
                    {
                    if (env.BRANCH_NAME == 'release')
                        {
                        sh 'anaconda -t ${ANACONDA_TOKEN} upload --force --no-progress ${WORKSPACE}/conda-bld/**/*.tar.bz2'
                        }
                    }
                }
            post
                {
                always
                    {
                    deleteDir()
                    }
                }
            }

        stage('unit-gcc49-py27-cd75')
            {
            agent { label 'gpu' }

            environment
                {
                CC = '/usr/bin/gcc-4.9'
                CXX = '/usr/bin/g++-4.9'
                PYVER = '2.7'
                CMAKE_BIN = '/usr/bin'
                ENABLE_CUDA = 'ON'
                ENABLE_MPI = 'ON'
                BUILD_VALIDATION = 'OFF'
                CONTAINER = '/nfs/glotzer/containers/ci-20170809-cuda75.img'
                }

            steps
                {
                sh 'echo ${NODE_NAME}'

                dir('code')
                    {
                    checkout scm
                    sh 'git submodule update --init'
                    }

                dir('build')
                    {
                    timeout(time: 1, unit: 'HOURS')
                        {
                        sh '''
                            singularity exec --nv ${CONTAINER} ${CMAKE_BIN}/cmake ../code -DPYTHON_EXECUTABLE=/usr/bin/python${PYVER} -DENABLE_CUDA=${ENABLE_CUDA} -DENABLE_MPI=${ENABLE_MPI} -DBUILD_VALIDATION=${BUILD_VALIDATION} -DTEST_CPU_IN_GPU_BUILDS=OFF -GNinja
                           '''

                        sh 'singularity exec --nv ${CONTAINER} ninja -j 4'
                        }


                    timeout(time: 1, unit: 'HOURS')
                        {
                        sh '''
                            singularity exec --nv ${CONTAINER} ${CMAKE_BIN}/ctest --no-compress-output -T test --output-on-failure
                           '''
                        }
                    }

                sh 'xsltproc code/.jenkins/ctest2junit.xsl build/Testing/**/Test.xml > ./test.xml'

                junit 'test.xml'
                }
            post
                {
                always
                    {
                    archive 'build/Testing/**/Test.xml'
                    deleteDir()
                    }
                }
            }

        stage('unit-clang38-py35-cd80')
            {
            agent { label 'gpu' }

            environment
                {
                CC = '/usr/bin/clang'
                CXX = '/usr/bin/clang++'
                PYVER = '3.5'
                CMAKE_BIN = '/usr/bin'
                ENABLE_CUDA = 'ON'
                ENABLE_MPI = 'OFF'
                BUILD_VALIDATION = 'OFF'
                CONTAINER = '/nfs/glotzer/containers/ci-20170809-cuda80.img'
                }

            steps
                {
                sh 'echo ${NODE_NAME}'

                dir('code')
                    {
                    checkout scm
                    sh 'git submodule update --init'
                    }

                dir('build')
                    {
                    timeout(time: 1, unit: 'HOURS')
                        {
                        sh '''
                            singularity exec --nv ${CONTAINER} ${CMAKE_BIN}/cmake ../code -DPYTHON_EXECUTABLE=/usr/bin/python${PYVER} -DENABLE_CUDA=${ENABLE_CUDA} -DENABLE_MPI=${ENABLE_MPI} -DBUILD_VALIDATION=${BUILD_VALIDATION} -DTEST_CPU_IN_GPU_BUILDS=OFF -GNinja
                           '''

                        sh 'singularity exec --nv ${CONTAINER} ninja -j 4'
                        }

                    timeout(time: 1, unit: 'HOURS')
                        {
                        sh '''
                            singularity exec --nv ${CONTAINER} ${CMAKE_BIN}/ctest --no-compress-output -T test --output-on-failure
                           '''
                        }
                    }

                sh 'xsltproc code/.jenkins/ctest2junit.xsl build/Testing/**/Test.xml > ./test.xml'

                junit 'test.xml'
                }
            post
                {
                always
                    {
                    archive 'build/Testing/**/Test.xml'
                    deleteDir()
                    }
                }
            }

        stage('vld-clang38-py35-mpi-cd80')
            {
            agent { label 'gpu' }

            environment
                {
                CC = '/usr/bin/clang'
                CXX = '/usr/bin/clang++'
                PYVER = '3.5'
                CMAKE_BIN = '/usr/bin'
                ENABLE_CUDA = 'ON'
                ENABLE_MPI = 'ON'
                BUILD_VALIDATION = 'ON'
                CONTAINER = '/nfs/glotzer/containers/ci-20170809-cuda80.img'
                }

            steps
                {
                sh 'echo ${NODE_NAME}'

                dir('code')
                    {
                    checkout scm
                    sh 'git submodule update --init'
                    }

                dir('build')
                    {
                    timeout(time: 1, unit: 'HOURS')
                        {
                        sh '''
                            singularity exec --nv ${CONTAINER} ${CMAKE_BIN}/cmake ../code -DPYTHON_EXECUTABLE=/usr/bin/python${PYVER} -DENABLE_CUDA=${ENABLE_CUDA} -DENABLE_MPI=${ENABLE_MPI} -DBUILD_VALIDATION=${BUILD_VALIDATION} -DTEST_CPU_IN_GPU_BUILDS=OFF -GNinja
                           '''

                        sh 'singularity exec --nv ${CONTAINER} ninja -j 4'
                        }

                    timeout(time: 15, unit: 'HOURS')
                        {
                        sh '''
                            singularity exec --nv ${CONTAINER} ${CMAKE_BIN}/ctest --no-compress-output -T test --output-on-failure
                           '''
                        }
                    }

                sh 'xsltproc code/.jenkins/ctest2junit.xsl build/Testing/**/Test.xml > ./test.xml'

                junit 'test.xml'
                }
            post
                {
                always
                    {
                    archive 'build/Testing/**/Test.xml'
                    deleteDir()
                    }
                }
            }

        }
    }
